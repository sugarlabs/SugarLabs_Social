"""
Django settings for Project_SLS project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')id3apc64k0a3lb0wzkb!nif8v940-s)pq@xx#90euic-(5)8j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1', 'calm-anchorage-15916.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_extensions',
    'threadedcomments',
    'crispy_forms',
    'django_comments',
    'django.contrib.sites',
    'taggit',
    'core',
    'feed',
    'post',
    'blog',
    'projects',
    'softwares',
    'social_django',
    'accounts',
    'activities'
    # 'custom_tags'
]

COMMENTS_APP = 'threadedcomments'

# FLUENT_COMMENTS_FIELD_ORDER = ('name', 'email', 'comment')
# FLUENT_COMMENTS_EXCLUDE_FIELDS = ('url')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Project_SLS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends', 
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

WSGI_APPLICATION = 'Project_SLS.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'database',
        'USER': 'username',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '',
    }
}

#Password hashers 'Bcrypt is used for password hashing'
PASSWORD_HASHERS = [
        'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
        'django.contrib.auth.hashers.BCryptPasswordHasher',
        'django.contrib.auth.hashers.PBKDF2PasswordHasher',
        'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Authentication Backends for different social platform

AUTHENTICATION_BACKENDS = (
    'social_core.backends.open_id.OpenIdAuth', #for google authentication
    'social_core.backends.google.GoogleOpenId', #for google authentication
    'social_core.backends.google.GoogleOAuth2', #for google authentication
    'social_core.backends.github.GithubOAuth2', #for github authentication
    'social_core.backends.facebook.FacebookOAuth2', #for facebook authentication

    'django.contrib.auth.backends.ModelBackend',
)

#to use the built-in JSONB field to store the extracted extra_data
SOCIAL_AUTH_POSTGRES_JSONFIELD = True

# google auth credentials
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY ='988351086799-nqbscdiddo197rahloh6pftvdshshkr3.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET ='HKPd7FOBPryXr0MKJsQeSIEj'

# github auth credentials
SOCIAL_AUTH_GITHUB_KEY = '7a3fb8d954ba5e417e01'
SOCIAL_AUTH_GITHUB_SECRET = '738ed4841847dfc9ee449894643b4aec2e1a1432'

# facebook auth credentials
SOCIAL_AUTH_FACEBOOK_KEY = '514847602262073'
SOCIAL_AUTH_FACEBOOK_SECRET = '0f6f0a43080d98d75d0a7fe15d7ddec2'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

#if user is not logged in and try to access the restricted material he or she
#will be redirected to login page
LOGIN_URL ='login'
LOGIN_REDIRECT_URL = '/feed/'

SITE_ID=1
